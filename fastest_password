<?php

declare(strict_types=1);

memory_reset_peak_usage();
$startingMemory = memory_get_usage();
$startDatetime = date('Y-m-d H:i:s');
$startTime = microtime(true);

echo 'Start Datetime: ' . $startDatetime . PHP_EOL;
echo 'Start Time: '. $startTime . PHP_EOL;
$case_sensitive_found = $case_insensitive_found = $stringfoundOnlyLowerCase = $stringfoundOnlyUpperCase = $stringfoundOnlyNumbers = $stringfoundOnlyLetters = $maxPasswordLength = $minPasswordLength = $row=$totalLength=$stringfoundOnlyNonAlpha=$stringfoundOnlyAlphaNumeric=$count = 0;
//$all_words = file('src/Password/Common/words.txt',FILE_IGNORE_NEW_LINES);
$common_passwords = file('src/Password/Common/10-million-password-list-top-10000.txt',FILE_IGNORE_NEW_LINES);
$all_words = file_get_contents('src/Password/Common/words.txt');
$all_words_lower = strtolower($all_words);
$all_words_lower_array = explode(PHP_EOL,$all_words_lower);
$all_words_array = explode(PHP_EOL,$all_words);
$count = 0;
foreach ($common_passwords as $password){
    if ($count == 0 ){
        $minPasswordLength = strlen($password);
    }
    $stringfoundCase = array_search($password,$all_words_array);
    $stringfoundCaseInsensitive = array_search(strtolower($password),$all_words_lower_array);
    if ($stringfoundCase){
        $case_sensitive_found++;
    }
    if ($stringfoundCaseInsensitive){
        $case_insensitive_found++;
    }
    if (preg_match("/^[a-z]+$/", $password)) {
        $stringfoundOnlyLowerCase++;
        $stringfoundOnlyLetters++;
    }
    if (preg_match("/^[A-Z]+$/", $password)) {
        $stringfoundOnlyUpperCase++;
        $stringfoundOnlyLetters++;
    }
    if (preg_match("/^\d+$/", $password)){
        $stringfoundOnlyNumbers++;
    }
    if (ctype_alnum($password)){
        $stringfoundOnlyAlphaNumeric++;
    }
    else{
        $stringfoundOnlyNonAlpha++;
    }
    if (strlen($password) < $minPasswordLength){
        $minPasswordLength = strlen($password);
    }
    if (strlen($password) > $maxPasswordLength){
        $maxPasswordLength = strlen($password);
    }
    $totalLength+=strlen($password);
    $row++;
    $count++;
}
$averageLength = round($totalLength / $row ,1,PHP_ROUND_HALF_DOWN);
echo "Case Sensitive Passwords: $case_sensitive_found \n";
echo "Case InSensitive Passwords: $case_insensitive_found \n";
echo "Common Passwords that only contain lowercase letters: <int>: $stringfoundOnlyLowerCase \n ";
echo "Common Passwords that only contain uppercase letters: <int>: $stringfoundOnlyUpperCase \n";
echo "Common Passwords that only contain numbers: <int>: $stringfoundOnlyNumbers \n";
echo "Common Passwords that only contain letters: <int>: $stringfoundOnlyLetters \n";
echo "Common Passwords that only contain alphanumeric characters: <int>: $stringfoundOnlyAlphaNumeric \n";
echo "Common Passwords that contain any non-alphanumeric characters: <int>: $stringfoundOnlyNonAlpha \n";
echo "Minimum Common Password Length: <int>: $minPasswordLength \n";
echo "Maximum Common Password Length: <int>: $maxPasswordLength \n";
echo "Average Common Password Length: <float, 1, round down>: $averageLength \n";

// run code

$endDatetime = date('Y-m-d H:i:s');
echo 'End Datetime: ' . $endDatetime . PHP_EOL;
$endTime = microtime(true);
echo 'End Time: ' . $endTime . PHP_EOL;
echo 'Total Time: ' . ($endTime - $startTime) . PHP_EOL;
$totalMemoryUsed = memory_get_peak_usage() - $startingMemory;
echo 'Peak Memory: ' . memory_get_peak_usage() . PHP_EOL;
echo 'Memory Used: ' . $totalMemoryUsed . PHP_EOL;
